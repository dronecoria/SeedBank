#ifndef DISPLAY_ST7789_H
#define DISPLAY_ST7789_H

#include <Adafruit_GFX.h>    // Core graphics library
#include <Adafruit_ST7789.h> // Hardware-specific library for ST7789
#include <SPI.h>

#define TFT_RST 2 // Or set to -1 and connect to Arduino RESET pin
#define TFT_DC 4
#define TFT_CS -1

void loop_display_st7789(void* parameter);
void display_time(Adafruit_ST7789& tft);

// http://javl.github.io/image2cpp/
// 'snow', 32x32px
const unsigned char snow[] PROGMEM = {
    0x00, 0x01, 0xc0, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x0d, 0xd8, 0x00,
    0x00, 0x1f, 0xfc, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x01, 0x8f, 0xf0, 0xc0,
    0x03, 0xc7, 0xe1, 0xc0, 0x19, 0xc3, 0xc1, 0xdc, 0x1f, 0xc1, 0xc1, 0xfc,
    0x1f, 0xc1, 0xc3, 0xfc, 0x07, 0xe1, 0xc3, 0xf0, 0x0f, 0xf1, 0xc7, 0xf8,
    0x1f, 0xfd, 0xdf, 0xfc, 0x1f, 0x3f, 0xfe, 0x7c, 0x00, 0x1f, 0xf8, 0x00,
    0x00, 0x07, 0xf0, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x1c, 0x3f, 0xfc, 0x1c,
    0x1f, 0xff, 0xff, 0xfc, 0x1f, 0xf9, 0xcf, 0xfc, 0x07, 0xe1, 0xc3, 0xf0,
    0x0f, 0xc1, 0xc3, 0xf8, 0x1f, 0xc1, 0xc1, 0xfc, 0x1f, 0xc1, 0xc1, 0xfc,
    0x01, 0xc3, 0xe1, 0xc0, 0x03, 0x87, 0xf1, 0xc0, 0x00, 0x0f, 0xf8, 0x80,
    0x00, 0x1f, 0xfc, 0x00, 0x00, 0x1d, 0xf8, 0x00, 0x00, 0x01, 0xc0, 0x00,
    0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00 };
// 'light', 32x32px
const unsigned char light[] PROGMEM = {
    0x00, 0x07, 0xe0, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x7f, 0xfe, 0x00,
    0x00, 0xf8, 0x1f, 0x00, 0x01, 0xf0, 0x0f, 0x80, 0x03, 0xc7, 0x83, 0xc0,
    0x03, 0xcf, 0x83, 0xc0, 0x03, 0x9c, 0x01, 0xc0, 0x07, 0x38, 0x00, 0xe0,
    0x07, 0x30, 0x00, 0xe0, 0x07, 0x30, 0x00, 0xe0, 0x07, 0x30, 0x00, 0xe0,
    0x07, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0xe0, 0x03, 0x80, 0x01, 0xc0,
    0x03, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x01, 0xe0, 0x07, 0x80,
    0x00, 0xf0, 0x0f, 0x00, 0x00, 0x70, 0x0e, 0x00, 0x00, 0x78, 0x1e, 0x00,
    0x00, 0x38, 0x1c, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x1c, 0x38, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00,
    0x00, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x00,
    0x00, 0x0f, 0xf0, 0x00, 0x00, 0x07, 0xe0, 0x00 };
// 'fire', 32x32px
const unsigned char fire[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00,
    0x00, 0x1f, 0xe0, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x0f, 0xfe, 0x00,
    0x00, 0x0f, 0xff, 0x00, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x1f, 0xff, 0xc0,
    0x00, 0x1f, 0xff, 0xe0, 0x00, 0x3f, 0xff, 0xf0, 0x00, 0x7f, 0xff, 0xf0,
    0x00, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xf8, 0x03, 0xff, 0xff, 0xf8,
    0x07, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xfc,
    0x1f, 0xff, 0xef, 0xfc, 0x3f, 0xff, 0xe7, 0xfc, 0x3f, 0xff, 0xf3, 0xfc,
    0x3f, 0xff, 0xe3, 0xfc, 0x3f, 0xff, 0xe3, 0xf8, 0x3f, 0xff, 0xe3, 0xf8,
    0x3f, 0xef, 0xc3, 0xf8, 0x1f, 0xe3, 0x83, 0xf0, 0x1f, 0xe0, 0x03, 0xe0,
    0x0f, 0xe0, 0x03, 0xc0, 0x07, 0xe0, 0x03, 0x80, 0x03, 0xe0, 0x07, 0x00,
    0x01, 0xe0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00 };
// 'fan', 32x32px
const unsigned char fan[] PROGMEM = {
    0x00, 0x01, 0xc0, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x1f, 0xc0, 0x00,
    0x00, 0x3f, 0xc0, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x7f, 0xc0, 0x00,
    0x00, 0x7f, 0x80, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0xff, 0xbf, 0x80,
    0x00, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xfc,
    0x00, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xfe, 0xfc, 0x7e, 0x7f, 0xfe,
    0xff, 0xfc, 0x3f, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0x7f, 0xfe, 0x7e, 0x3f,
    0x7f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x00,
    0x1f, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0x00,
    0x00, 0x01, 0xff, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x03, 0xfe, 0x00,
    0x00, 0x03, 0xfc, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x03, 0xf8, 0x00,
    0x00, 0x03, 0xe0, 0x00, 0x00, 0x03, 0x80, 0x00 };

#endif
